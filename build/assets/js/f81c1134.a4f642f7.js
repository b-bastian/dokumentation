"use strict";(self.webpackChunkdoku=self.webpackChunkdoku||[]).push([[8130],{7735:e=>{e.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"/2024/10/14/github","metadata":{"permalink":"/blog/2024/10/14/github","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2024-10-14-github/index.md","source":"@site/blog/2024-10-14-github/index.md","title":"Arbeit mit GitHub","description":"GitHub eignet sich optimal zur Projektverwaltung. Es bietet","date":"2024-10-14T00:00:00.000Z","tags":[],"readingTime":0.285,"hasTruncateMarker":true,"authors":[{"name":"Brugger Bastian","title":"Sch\xfcler an der BHAK Zell am See","url":"https://github.com/b-bastian","page":{"permalink":"/blog/authors/b-bastian"},"socials":{"github":"https://github.com/b-bastian"},"imageURL":"https://github.com/b-bastian.png","key":"b-bastian"}],"frontMatter":{"authors":"b-bastian","date":"2024-10-14T00:00:00.000Z"},"unlisted":false,"nextItem":{"title":"Arbeitsauftrag 17.10.2023","permalink":"/blog/2023/10/17/arbeitsauftrag"}},"content":"GitHub eignet sich optimal zur Projektverwaltung. Es bietet\\n\\n\x3c!-- truncate --\x3e\\n\\n- Verwaltung von Issues,\\n- Roadmaps,\\n- Workflows (automatische Ver\xe4nderung von Issues),\\n- Kanban,\\n- Meilensteine,\\n- Tags, um Ver\xf6ffentlichungen zu kennzeichnen,\\n- Branches und\\n- Projektverwaltung.\\n\\n## Verwaltung von Issues\\n\\nFehler oder Verbesserungsvorschl\xe4ge k\xf6nnen im Repository gemeldet werden. Die Issues k\xf6nnen mit Labels gekennzeichnet werden"},{"id":"/2023/10/17/arbeitsauftrag","metadata":{"permalink":"/blog/2023/10/17/arbeitsauftrag","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2023-10-17-arbeitsauftrag.md","source":"@site/blog/2023-10-17-arbeitsauftrag.md","title":"Arbeitsauftrag 17.10.2023","description":"Gr\xfcnde f\xfcr ein Projekt","date":"2023-10-17T00:00:00.000Z","tags":[],"readingTime":1.24,"hasTruncateMarker":true,"authors":[{"name":"Brugger Bastian","title":"Sch\xfcler an der BHAK Zell am See","url":"https://github.com/b-bastian","page":{"permalink":"/blog/authors/b-bastian"},"socials":{"github":"https://github.com/b-bastian"},"imageURL":"https://github.com/b-bastian.png","key":"b-bastian"}],"frontMatter":{"date":"2023-10-17T00:00:00.000Z","authors":"b-bastian","title":"Arbeitsauftrag 17.10.2023"},"unlisted":false,"prevItem":{"title":"Arbeit mit GitHub","permalink":"/blog/2024/10/14/github"},"nextItem":{"title":"Exceptions","permalink":"/blog/2023/09/19/exceptions"}},"content":"## Gr\xfcnde f\xfcr ein Projekt\\n\\nFolgende Gr\xfcnde sprechen f\xfcr die Durchf\xfchrung einer Arbeit als Projekt:\\n\\n\x3c!-- truncate --\x3e\\n\\n- eine _individuelle_ Probleml\xf6sung ist notwendig (Standard kann **automatisiert** werden)\\n- eine Innovation in einem Betrieb ist notwendig\\n- Aufgaben sind **komplex**\\n- es handelt sich **nicht** um das **Alltagsgesch\xe4ft** des Unternehmens\\n\\n## Eigenschaften eines Projekts\\n\\n- Es wird ein **klares Ziel** verfolgt.\\n- Es gibt einen zuvor definierten Zeitrahmen. Die **Laufzeit** ist **begrenzt**.\\n- Es handelt sich um eine **komplexe Aufgabe** (meist **neuartig**).\\n- Es herrscht ein **soziales System (innen und au\xdfen)**. Die **Beziehungen im Projekt** und **au\xdferhalb** m\xfcssten unterschieden werden\\n- Die verf\xfcgbaren Ressourcen sind begrenzt (Personal, Geld, Material, Know-How,...)\\n\\n## Beispiele f\xfcr ein Projekt\\n\\n1. **Entwicklung einer mobilen App:** Die Erstellung einer Anwendung f\xfcr Smartphones oder Tablets, sei es f\xfcr iOS, Android oder andere Plattformen. Zum Beispiel die Entwicklung einer Fitness-App, eines sozialen Netzwerks oder eines Spiele-Apps.\\n\\n2. **Website-Entwicklung:** Die Konzeption, Gestaltung und Programmierung einer Website, sei es f\xfcr ein Unternehmen, eine E-Commerce-Plattform, ein Blog oder eine Informationsseite.\\n\\n3. **Software-Update oder -Migration:** Die Aktualisierung einer bestehenden Software auf eine neue Version oder die Migration einer Anwendung von einer Plattform auf eine andere, z. B. von einer On-Premises-Software zu einer Cloud-basierten L\xf6sung.\\n\\n4. **Einf\xfchrung eines ERP-Systems:** Die Implementierung eines Enterprise Resource Planning (ERP)-Systems, das in Unternehmen zur Verwaltung von Gesch\xe4ftsprozessen und Ressourcen eingesetzt wird.\\n\\n5. **Sicherheitsaudit und -verbesserung:** Die \xdcberpr\xfcfung und Verbesserung der Sicherheit einer bestehenden Software oder Website, um Schwachstellen und Sicherheitsl\xfccken zu identifizieren und zu beheben."},{"id":"/2023/09/19/exceptions","metadata":{"permalink":"/blog/2023/09/19/exceptions","editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/blog/2023-09-19-exceptions.md","source":"@site/blog/2023-09-19-exceptions.md","title":"Exceptions","description":"Allgemeines","date":"2023-09-19T00:00:00.000Z","tags":[],"readingTime":2.145,"hasTruncateMarker":true,"authors":[{"name":"Brugger Bastian","title":"Sch\xfcler an der BHAK Zell am See","url":"https://github.com/b-bastian","page":{"permalink":"/blog/authors/b-bastian"},"socials":{"github":"https://github.com/b-bastian"},"imageURL":"https://github.com/b-bastian.png","key":"b-bastian"}],"frontMatter":{"date":"2023-09-19T00:00:00.000Z","authors":"b-bastian","title":"Exceptions"},"unlisted":false,"prevItem":{"title":"Arbeitsauftrag 17.10.2023","permalink":"/blog/2023/10/17/arbeitsauftrag"}},"content":"## Allgemeines\\n\\nSollte ein unvorhergesehenes Ereignis auftreten, so wird eine _Exception_ ausgel\xf6st.\\n\\n\x3c!-- truncate --\x3e\\n\\n## Keine Exception\\n\\nBei folgendem Beispiel wird keine Exception ausgel\xf6st. Folgende F\xe4lle werden ber\xfccksichtigt:\\n\\n- leere Eingabe\\n- Texteingabe\\n- Eingabe von Zahlen\\n\\n```cs\\nConsole.Write(\\"Username: \\");\\nstring username = Console.ReadLine();\\nConsole.WriteLine($\\"Username: {username}\\");\\n```\\n\\n## Exception bei der Umwandlung von Zeichen\\n\\nWird eine Zeichenkette fehlerhaft in eine Zahl umgewandelt, so tritt eine `Exception` auf.\\n\\n![Exception](/images/blog/exception-convert-string-to-int.png)\\n\\n## try & catch\\n\\nAusgel\xf6ste `Exceptions` k\xf6nnen mittels `try` und `catch` bearbeitet werden.\\n\\n```cs\\nConsole.Write(\\"Zahl: \\");\\nstring eingabe = Console.ReadLine();\\n\\n\\ntry {\\n\\tint zahl = Convert.ToInt32(eingabe);\\n\\tConsole.WriteLine($\\"Zahl: {zahl}\\");\\n} catch (FormatException ex) {\\n\\tConsole.WriteLine(\\"Bitte kontrollieren Sie die eingegebene Zahl!\\");\\n\\tConsole.WriteLine(ex.Message);\\n}\\n```\\n\\n:::danger ACHTUNG\\nDie Bearbeitung wird im `try`-Bereich bis zum Auftritt eines Fehlers ersucht. Beim Auftreten eines Fehlers wird **sofort** in den `catch`-Bereich gewechselt.\\n:::\\n\\nDurch die Angabe der genauen `Exception` kann gezielt auf den Fehler reagiert werden. Mittels `ex.Message` kann die Fehlermeldung ausgelesen werden.\\n\\n## Mehrere catch-Bereiche\\n\\nFalls mehrere `catch`-Bereiche ben\xf6tigt werden, k\xf6nnen diese an die zuvor erstellten Bl\xf6cke gereiht werden.\\n\\n```cs\\nConsole.Write(\\"Zahl: \\");\\nstring eingabe = Console.ReadLine();\\n\\nint[] zahlen = { 17, 20, 15, 11, 9, 5, 0 };\\n\\ntry {\\n\\tint position = Convert.ToInt32(eingabe);\\n\\tConsole.WriteLine($\\"Zahl: {zahlen[position]}\\");\\n} catch (FormatException ex) {\\n\\tConsole.WriteLine(\\"Bitte kontrollieren Sie die eingegebene Zahl!\\");\\n\\tConsole.WriteLine(ex.Message);\\n} catch (IndexOutOfRangeException) {\\n\\tConsole.WriteLine($\\"Bitte geben Sie eine Zahl zwischen 0 & {zahlen.Length - 1} ein!\\");\\n}\\n```\\n\\nWird im `catch`-Bereich `Exception` angegeben, so handelt es sich um die **Oberklasse** und diese ber\xfccksichtigt **alle** Exceptions.\\n\\n```cs\\nConsole.Write(\\"Zahl: \\");\\nstring eingabe = Console.ReadLine();\\n\\nint[] zahlen = { 17, 20, 15, 11, 9, 5, 0 };\\n\\ntry {\\n\\tint position = Convert.ToInt32(eingabe);\\n\\tConsole.WriteLine($\\"Zahl: {zahlen[position]}\\");\\n} catch (FormatException ex) {\\n\\tConsole.WriteLine(\\"Bitte kontrollieren Sie die eingegebene Zahl!\\");\\n\\tConsole.WriteLine(ex.Message);\\n} catch (IndexOutOfRangeException) {\\n\\tConsole.WriteLine($\\"Bitte geben Sie eine Zahl zwischen 0 & {zahlen.Length - 1} ein!\\");\\n} catch (Exception ex) {\\n\\tConsole.WriteLine(ex.Message);\\n}\\n```\\n\\n## finally\\n\\nWird ein `finally`-Block verwendet, so wird dieser Block **stets** aufgerufen. Dies bedeutet, dass der `finally`-Block sowohl bei einem Fehler als auch bei einer erfolgreichen Bearbeitung aufgerufen wird.\\n\\n```cs\\nConsole.Write(\\"Zahl: \\");\\nstring eingabe = Console.ReadLine();\\n\\n\\ntry {\\n\\tint zahl = Convert.ToInt32(eingabe);\\n\\tConsole.WriteLine($\\"Zahl: {zahl}\\");\\n} catch (FormatException ex) {\\n\\tConsole.WriteLine(\\"Bitte kontrollieren Sie die eingegebene Zahl!\\");\\n\\tConsole.WriteLine(ex.Message);\\n}\\nfinally {\\n\\tConsole.WriteLine(\\"Vielen Dank!\\");\\n}\\n```\\n\\n## Eigene Exceptions erstellen\\n\\nEigene Exceptions k\xf6nnen mittels `throw new Exceptin(\\"Test der Nachricht\\")` ausgel\xf6st werden. Hierbei wird die Oberklasse `Exception` verwendet.\\n\\nM\xf6chte man eine **eigene Exception** verwenden, so muss eine **Unterklasse** der Exception erstellt werden.\\n\\n:::tip\\nVisual Studio (Windows) erstellt den Inhalt der Unterklasse nach der Angabe der Vererbung automatisch. :wink: :100: :fire: :apple: :relaxed: :mask:\\n:::"}]}}')}}]);